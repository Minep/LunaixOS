#ifndef LX_MMNGR_VIRT_PTE_H
#define LX_MMNGR_VIRT_PTE_H
#include <stdint.h>
#include "LX_MMNGR.h"
//I86处理器钦定格式
enum PAGE_PTE_FLAGS {

	I86_PTE_PRESENT = 1,				//0000000000000000000000000000001
	I86_PTE_WRITABLE = 2,				//0000000000000000000000000000010
	I86_PTE_USER = 4,					//0000000000000000000000000000100
	I86_PTE_WRITETHOUGH = 8,			//0000000000000000000000000001000
	I86_PTE_NOT_CACHEABLE = 0x10,		//0000000000000000000000000010000
	I86_PTE_ACCESSED = 0x20,			//0000000000000000000000000100000
	I86_PTE_DIRTY = 0x40,				//0000000000000000000000001000000
	I86_PTE_PAT = 0x80,					//0000000000000000000000010000000
	I86_PTE_CPU_GLOBAL = 0x100,			//0000000000000000000000100000000
	I86_PTE_LV4_GLOBAL = 0x200,			//0000000000000000000001000000000
	I86_PTE_FRAME = 0x7FFFF000 			//1111111111111111111000000000000
};

typedef uint32_t pt_entry;
extern void LX_PT_ENT_ADD_ATTR(pt_entry* e, uint32_t attr);
extern void LX_PT_ENT_DEL_ATTR(pt_entry* e, uint32_t attr);
extern void LX_PT_ENT_SET_FRAME(pt_entry*, physical_addr);
extern bool LX_PT_ENT_IS_PRESENT(pt_entry e);
extern bool LX_PT_ENT_IS_WRITEBLE(pt_entry e);
extern physical_addr LX_PT_ENT_PFN(pt_entry e);
#endif